apiVersion: apps/v1
kind: Deployment
metadata:
  name: react-app
  namespace: cert-manager-ingress
spec:
  replicas: 1
  selector:
    matchLabels:
      app: react-app
  template:
    metadata:
      labels:
        app: react-app
    spec:
      containers:
        - name: react-app
          image: 69966/reactjsimage:latest
          ports:
            - containerPort: 80
        
---
# deployment spring api
apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-api
  namespace: cert-manager-ingress
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spring-api
  template:
    metadata:
      labels:
        app: spring-api
    spec:
      containers:
        - name: spring-api
          image: muyleangin/spring-sen:1.0
          ports:
            - containerPort: 8080

---
# Create service for react-app
apiVersion: v1
kind: Service
metadata:
  name: react-app-svc
  namespace: cert-manager-ingress
spec:
  selector:
    app: react-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: ClusterIP

---
# Create service for spring-api
apiVersion: v1
kind: Service
metadata:
  name: spring-api
  namespace: cert-manager-ingress
spec:
  selector:
    app: spring-api
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  type: ClusterIP

---
# Create ingress for react-app
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: react-app-ingress
  namespace: cert-manager-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - host: b.sen-pai.live
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: react-app-svc
                port:
                  number: 80